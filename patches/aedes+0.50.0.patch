diff --git a/node_modules/aedes/aedes.js b/node_modules/aedes/aedes.js
index c02d289..da718c0 100644
--- a/node_modules/aedes/aedes.js
+++ b/node_modules/aedes/aedes.js
@@ -29,7 +29,9 @@ const defaultOptions = {
   trustProxy: false,
   trustedProxies: [],
   queueLimit: 42,
-  maxClientsIdLength: 23
+  maxClientsIdLength: 23,
+  // middleware functions for telemetry
+  wrapDeliveryFunc: null
 }
 
 function Aedes (opts) {
@@ -45,6 +47,7 @@ function Aedes (opts) {
   // +1 when construct a new aedes-packet
   // internal track for last brokerCounter
   this.counter = 0
+  this.concurrency = opts.concurrency
   this.queueLimit = opts.queueLimit
   this.connectTimeout = opts.connectTimeout
   this.maxClientsIdLength = opts.maxClientsIdLength
@@ -52,29 +55,26 @@ function Aedes (opts) {
     concurrency: opts.concurrency,
     matchEmptyLevels: true // [MQTT-4.7.1-3]
   })
-  this.handle = function handle (conn, req) {
-    conn.setMaxListeners(opts.concurrency * 2)
-    // create a new Client instance for a new connection
-    // return, just to please standard
-    return new Client(that, conn, req)
-  }
+
   this.persistence = opts.persistence || memory()
   this.persistence.broker = this
   this._parallel = parallel()
   this._series = series()
   this._enqueuers = reusify(DoEnqueues)
 
-  this.preConnect = opts.preConnect
-  this.authenticate = opts.authenticate
-  this.authorizePublish = opts.authorizePublish
-  this.authorizeSubscribe = opts.authorizeSubscribe
-  this.authorizeForward = opts.authorizeForward
-  this.published = opts.published
+  this._preConnect = opts.preConnect
+  this._authenticate = opts.authenticate
+  this._authorizePublish = opts.authorizePublish
+  this._authorizeSubscribe = opts.authorizeSubscribe
+  this._authorizeForward = opts.authorizeForward
+  this._published = opts.published
 
   this.decodeProtocol = opts.decodeProtocol
   this.trustProxy = opts.trustProxy
   this.trustedProxies = opts.trustedProxies
 
+  this._wrapDeliveryFunc = opts.wrapDeliveryFunc
+
   this.clients = {}
   this.brokers = {}
 
@@ -250,6 +250,15 @@ function removeSharp (sub) {
   return code !== 43 && code !== 35
 }
 
+// assiging to prototype is a breaking change as it is required to bind the Aedes instance to the function
+// @example net.createServer(broker.handle.bind(broker)) or net.createServer((socket) => broker.handle(socket))
+Aedes.prototype.handle = function handle (conn, req) {
+    conn.setMaxListeners(this.concurrency * 2)
+    // create a new Client instance for a new connection
+    // return, just to please standard
+    return new Client(this, conn, req)
+}
+
 function callPublished (_, done) {
   this.broker.published(this.packet, this.client, done)
   this.broker.emit('publish', this.packet, this.client)
@@ -338,6 +347,37 @@ Aedes.prototype.close = function (cb = noop) {
 
 Aedes.prototype.version = require('./package.json').version
 
+Aedes.prototype.preConnect = function (client, packet, callback) {
+  this._preConnect(client, packet, callback)
+}
+
+Aedes.prototype.authenticate = function (client, username, password, callback) {
+  this._authenticate(client, username, password, callback)
+}
+
+Aedes.prototype.authorizePublish = function (client, packet, callback) {
+  this._authorizePublish(client, packet, callback)
+}
+
+Aedes.prototype.authorizeSubscribe = function (client, sub, callback) {
+  this._authorizeSubscribe(client, sub, callback)
+}
+
+Aedes.prototype.authorizeForward = function (client, packet) {
+  return this._authorizeForward(client, packet)
+}
+
+Aedes.prototype.published = function (packet, client, callback) {
+  this._published(packet, client, callback)
+}
+
+Aedes.prototype.wrapDeliveryFunc = function (client, func) {
+  if (this._wrapDeliveryFunc) {
+    return this._wrapDeliveryFunc(client, func)
+  }
+  return func
+}
+
 function defaultPreConnect (client, packet, callback) {
   callback(null, true)
 }
diff --git a/node_modules/aedes/lib/client.js b/node_modules/aedes/lib/client.js
index 414d8e5..4d796ee 100644
--- a/node_modules/aedes/lib/client.js
+++ b/node_modules/aedes/lib/client.js
@@ -5,11 +5,11 @@ const EventEmitter = require('events')
 const util = require('util')
 const eos = require('end-of-stream')
 const Packet = require('aedes-packet')
-const write = require('./write')
+const { write } = require('./write')
 const QoSPacket = require('./qos-packet')
-const handleSubscribe = require('./handlers/subscribe')
-const handleUnsubscribe = require('./handlers/unsubscribe')
-const handle = require('./handlers')
+const { handleSubscribe } = require('./handlers/subscribe')
+const { handleUnsubscribe } = require('./handlers/unsubscribe')
+const { handle } = require('./handlers')
 const { pipeline } = require('stream')
 const { through } = require('./utils')
 
diff --git a/node_modules/aedes/lib/handlers/connect.js b/node_modules/aedes/lib/handlers/connect.js
index a4c32d0..bd2d8cb 100644
--- a/node_modules/aedes/lib/handlers/connect.js
+++ b/node_modules/aedes/lib/handlers/connect.js
@@ -2,10 +2,10 @@
 
 const retimer = require('retimer')
 const { pipeline } = require('stream')
-const write = require('../write')
+const { write } = require('../write')
 const QoSPacket = require('../qos-packet')
 const { through } = require('../utils')
-const handleSubscribe = require('./subscribe')
+const { handleSubscribe } = require('./subscribe')
 const uniqueId = require('hyperid')()
 
 function Connack (arg) {
@@ -264,4 +264,4 @@ function emptyQueueFilter (err, client, packet) {
   }
 }
 
-module.exports = handleConnect
+module.exports = { handleConnect }
diff --git a/node_modules/aedes/lib/handlers/index.js b/node_modules/aedes/lib/handlers/index.js
index a5dfaa8..b611293 100644
--- a/node_modules/aedes/lib/handlers/index.js
+++ b/node_modules/aedes/lib/handlers/index.js
@@ -1,13 +1,13 @@
 'use strict'
 
-const handleConnect = require('./connect')
-const handleSubscribe = require('./subscribe')
-const handleUnsubscribe = require('./unsubscribe')
-const handlePublish = require('./publish')
-const handlePuback = require('./puback')
-const handlePubrel = require('./pubrel')
-const handlePubrec = require('./pubrec')
-const handlePing = require('./ping')
+const { handleConnect } = require('./connect')
+const { handleSubscribe } = require('./subscribe')
+const { handleUnsubscribe } = require('./unsubscribe')
+const { handlePublish } = require('./publish')
+const { handlePuback } = require('./puback')
+const { handlePubrel } = require('./pubrel')
+const { handlePubrec } = require('./pubrec')
+const { handlePing } = require('./ping')
 
 function handle (client, packet, done) {
   if (packet.cmd === 'connect') {
@@ -74,4 +74,4 @@ function finish (conn, packet, done) {
   done(error)
 }
 
-module.exports = handle
+module.exports = { handle }
diff --git a/node_modules/aedes/lib/handlers/ping.js b/node_modules/aedes/lib/handlers/ping.js
index a4c042c..69b3ded 100644
--- a/node_modules/aedes/lib/handlers/ping.js
+++ b/node_modules/aedes/lib/handlers/ping.js
@@ -1,6 +1,6 @@
 'use strict'
 
-const write = require('../write')
+const { write } = require('../write')
 const pingResp = {
   cmd: 'pingresp'
 }
@@ -10,4 +10,4 @@ function handlePing (client, packet, done) {
   write(client, pingResp, done)
 }
 
-module.exports = handlePing
+module.exports = { handlePing }
diff --git a/node_modules/aedes/lib/handlers/puback.js b/node_modules/aedes/lib/handlers/puback.js
index e4b419c..8376861 100644
--- a/node_modules/aedes/lib/handlers/puback.js
+++ b/node_modules/aedes/lib/handlers/puback.js
@@ -8,4 +8,4 @@ function handlePuback (client, packet, done) {
   })
 }
 
-module.exports = handlePuback
+module.exports = { handlePuback }
diff --git a/node_modules/aedes/lib/handlers/publish.js b/node_modules/aedes/lib/handlers/publish.js
index e30c9db..5c3e167 100644
--- a/node_modules/aedes/lib/handlers/publish.js
+++ b/node_modules/aedes/lib/handlers/publish.js
@@ -1,6 +1,6 @@
 'use strict'
 
-const write = require('../write')
+const { write } = require('../write')
 
 function PubAck (packet) {
   this.cmd = 'puback'
@@ -62,4 +62,4 @@ function authorizePublish (packet, done) {
   this.broker.authorizePublish(this, packet, done)
 }
 
-module.exports = handlePublish
+module.exports = { handlePublish }
diff --git a/node_modules/aedes/lib/handlers/pubrec.js b/node_modules/aedes/lib/handlers/pubrec.js
index 5c914dd..dc7a7f0 100644
--- a/node_modules/aedes/lib/handlers/pubrec.js
+++ b/node_modules/aedes/lib/handlers/pubrec.js
@@ -1,6 +1,6 @@
 'use strict'
 
-const write = require('../write')
+const { write } = require('../write')
 
 function PubRel (packet) {
   this.cmd = 'pubrel'
@@ -27,4 +27,4 @@ function handlePubrec (client, packet, done) {
   }
 }
 
-module.exports = handlePubrec
+module.exports = { handlePubrec }
diff --git a/node_modules/aedes/lib/handlers/pubrel.js b/node_modules/aedes/lib/handlers/pubrel.js
index 09dcc86..672b697 100644
--- a/node_modules/aedes/lib/handlers/pubrel.js
+++ b/node_modules/aedes/lib/handlers/pubrel.js
@@ -1,6 +1,6 @@
 'use strict'
 
-const write = require('../write')
+const { write } = require('../write')
 
 function ClientPacketStatus (client, packet) {
   this.client = client
@@ -47,4 +47,4 @@ function pubrelDel (arg, done) {
   persistence.incomingDelPacket(this.client, arg.packet, done)
 }
 
-module.exports = handlePubrel
+module.exports = { handlePubrel }
diff --git a/node_modules/aedes/lib/handlers/subscribe.js b/node_modules/aedes/lib/handlers/subscribe.js
index 2470427..6a92c2e 100644
--- a/node_modules/aedes/lib/handlers/subscribe.js
+++ b/node_modules/aedes/lib/handlers/subscribe.js
@@ -4,7 +4,7 @@ const fastfall = require('fastfall')
 const Packet = require('aedes-packet')
 const { through } = require('../utils')
 const { validateTopic, $SYS_PREFIX } = require('../utils')
-const write = require('../write')
+const { write } = require('../write')
 
 const subscribeTopicActions = fastfall([
   authorize,
@@ -155,13 +155,17 @@ function addSubs (sub, done) {
     func = blockDollarSignTopics(func)
   }
 
+  func = broker.wrapDeliveryFunc(client, func)
+
   if (!client.subscriptions[topic]) {
-    client.subscriptions[topic] = new Subscription(qos, func, rh, rap, nl)
-    broker.subscribe(topic, func, done)
+    const subscription = new Subscription(qos, func, rh, rap, nl)
+    client.subscriptions[topic] = subscription
+    broker.subscribe(topic, subscription.func, done)
   } else if (client.subscriptions[topic].qos !== qos || client.subscriptions[topic].rh !== rh || client.subscriptions[topic].rap !== rap || client.subscriptions[topic].nl !== nl) {
     broker.unsubscribe(topic, client.subscriptions[topic].func)
-    client.subscriptions[topic] = new Subscription(qos, func, rh, rap, nl)
-    broker.subscribe(topic, func, done)
+    const subscription = new Subscription(qos, func, rh, rap, nl)
+    client.subscriptions[topic] = subscription
+    broker.subscribe(topic, subscription.func, done)
   } else {
     done()
   }
@@ -245,4 +249,4 @@ function completeSubscribe (err) {
 
 function noop () { }
 
-module.exports = handleSubscribe
+module.exports = { handleSubscribe }
diff --git a/node_modules/aedes/lib/handlers/unsubscribe.js b/node_modules/aedes/lib/handlers/unsubscribe.js
index e08c317..b9cd7ef 100644
--- a/node_modules/aedes/lib/handlers/unsubscribe.js
+++ b/node_modules/aedes/lib/handlers/unsubscribe.js
@@ -1,6 +1,6 @@
 'use strict'
 
-const write = require('../write')
+const { write } = require('../write')
 const { validateTopic, $SYS_PREFIX } = require('../utils')
 
 function UnSubAck (packet) {
@@ -101,4 +101,4 @@ function completeUnsubscribe (err) {
 
 function noop () { }
 
-module.exports = handleUnsubscribe
+module.exports = { handleUnsubscribe }
diff --git a/node_modules/aedes/lib/write.js b/node_modules/aedes/lib/write.js
index 716d81a..a5d186c 100644
--- a/node_modules/aedes/lib/write.js
+++ b/node_modules/aedes/lib/write.js
@@ -21,4 +21,4 @@ function write (client, packet, done) {
   setImmediate(done, error, client)
 }
 
-module.exports = write
+module.exports = { write }
diff --git a/node_modules/aedes/test/auth.js b/node_modules/aedes/test/auth.js
index 248657c..eb30b0f 100644
--- a/node_modules/aedes/test/auth.js
+++ b/node_modules/aedes/test/auth.js
@@ -3,9 +3,9 @@
 const { test } = require('tap')
 const eos = require('end-of-stream')
 const Faketimers = require('@sinonjs/fake-timers')
-const Client = require('../lib/client')
+const Client = require('aedes/lib/client')
 const { setup, connect, noError, subscribe, subscribeMultiple } = require('./helper')
-const aedes = require('../')
+const aedes = require('aedes')
 
 test('authenticate successfully a client with username and password', function (t) {
   t.plan(4)
diff --git a/node_modules/aedes/test/basic.js b/node_modules/aedes/test/basic.js
index 6ca103f..053c798 100644
--- a/node_modules/aedes/test/basic.js
+++ b/node_modules/aedes/test/basic.js
@@ -3,7 +3,7 @@
 const { test } = require('tap')
 const eos = require('end-of-stream')
 const { setup, connect, subscribe, subscribeMultiple, noError } = require('./helper')
-const aedes = require('../')
+const aedes = require('aedes')
 const proxyquire = require('proxyquire')
 
 test('test aedes.createBroker', function (t) {
@@ -153,7 +153,7 @@ test('publish to $SYS topic throws error', function (t) {
 test('return write errors to callback', function (t) {
   t.plan(1)
 
-  const write = proxyquire('../lib/write.js', {
+  const write = proxyquire('aedes/lib/write.js', {
     'mqtt-packet': {
       writeToStream: () => {
         throw Error('error')
diff --git a/node_modules/aedes/types/client.d.ts b/node_modules/aedes/types/client.d.ts
index 2906213..c415fce 100644
--- a/node_modules/aedes/types/client.d.ts
+++ b/node_modules/aedes/types/client.d.ts
@@ -6,10 +6,10 @@ import {
   Subscriptions,
   UnsubscribePacket
 } from './packet'
-import { Connection } from './instance'
+import Aedes, { Connection } from './instance'
 import { EventEmitter } from 'node:events'
 
-export interface Client extends EventEmitter {
+export class Client extends EventEmitter {
   id: Readonly<string>;
   clean: Readonly<boolean>;
   version: Readonly<number>;
@@ -19,6 +19,8 @@ export interface Client extends EventEmitter {
   connected: Readonly<boolean>;
   closed: Readonly<boolean>;
 
+  constructor(broker: Aedes, conn: Connection, req?: IncomingMessage)
+
   on(event: 'connected', listener: () => void): this;
   on(event: 'error', listener: (error: Error) => void): this;
 
diff --git a/node_modules/aedes/types/instance.d.ts b/node_modules/aedes/types/instance.d.ts
index f912a95..b562c5f 100644
--- a/node_modules/aedes/types/instance.d.ts
+++ b/node_modules/aedes/types/instance.d.ts
@@ -68,6 +68,13 @@ type PublishedHandler = (
   callback: (error?: Error | null) => void
 ) => void;
 
+type DeliverFunc = (packet: AedesPublishPacket, callback: () => void) => void
+
+type DeliverFuncWrapper = (
+  client: Client,
+  deliverfunc: DeliverFunc
+) => DeliverFunc
+
 export interface AedesOptions {
   mq?: any;
   id?: string;
@@ -83,6 +90,7 @@ export interface AedesOptions {
   authorizeSubscribe?: AuthorizeSubscribeHandler;
   authorizeForward?: AuthorizeForwardHandler;
   published?: PublishedHandler;
+  wrapDeliveryFunc?: DeliverFuncWrapper;
 }
 
 export default class Aedes extends EventEmitter {
@@ -156,4 +164,5 @@ export default class Aedes extends EventEmitter {
   authorizeSubscribe: AuthorizeSubscribeHandler
   authorizeForward: AuthorizeForwardHandler
   published: PublishedHandler
+  wrapDeliveryFunc: DeliverFuncWrapper
 }
